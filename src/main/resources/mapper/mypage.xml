<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- DAO클래스를 alias설정해 뒀기에, music.dao.mypageDao라고 작성할 필요X -->
<mapper namespace="userInfo">
	<!-- resultType 속성: 쿼리 결과를 매핑할 DTO 클래스의 경로 -->

	<!-- member(userId) & prBoard(userId) => UserInfoVO클래스 객체 
		: id값이 같은 유저 정보 가져옴(From prBoard pr LEFT OUTER JOIN member us) -->
	<select id="findUser" resultType="userInfo">
		SELECT pr.prNo, pr.userId, pr.prSub, pr.prText, pr.prRcount, 
			pr.prLoc, pr.prCareer, pr.prVideo, 
			pr.prFile, pr.prHash, pr.prDelYn,
			us.userMajor, us.userPw, us.userName, us.userPhone,
			us.userEmail, us.userGru, us.userDelYn
		FROM prBoard pr
		LEFT OUTER JOIN member us
		ON pr.userId = us.userId 
		WHERE us.userId = #{id}
		   	AND pr.prDelYn != 'Y' AND us.userDelYn != 'Y'
	</select>
	<!-- 삭제되지 않은 데이터만 가져옴 -->



<!-- 	<select id="findCompany" resultType="site.metacoding.miniproject1.web.dto.response.mypage.CompanyInfoDto">
		SELECT @ROWNUM :=@ROWNUM+1 AS no, comrec.*
		FROM (SELECT com.id, com.company_name, com.address, com.email,
		com.company_number, com.photo,
		com.region_code_name, com.intro,
		com.years, com.member_count, com.created,
		wan.id wanted_id,
		wan.position_code_id,
		wan.career_code_id, wan.pay,
		wan.title,
		wan.detail, wan.view_count, wan.enddate, wan.checked
		FROM companys com
		INNER JOIN wanteds wan
		ON com.id =
		wan.company_id
		LEFT OUTER JOIN users us
		ON wan.position_code_id = us.position_code_id
		WHERE us.id = #{id} AND wan.enddate > NOW()
		ORDER BY RAND() LIMIT
		4) comrec,
		(SELECT @ROWNUM := 0) R
	</select>

	<select id="findCompanyIfNull" resultType="site.metacoding.miniproject1.web.dto.response.mypage.CompanyInfoDto">
		SELECT @ROWNUM :=@ROWNUM+1 AS no, comrec.*
		FROM (SELECT com.id, com.company_name, com.address,
		com.email,
		com.company_number, com.photo,
		com.region_code_name, com.intro,
		com.years, com.member_count, com.created,
		wan.id wanted_id,
		wan.position_code_id, wan.career_code_id, wan.pay,
		wan.title,
		wan.detail, wan.view_count, wan.enddate, wan.checked
		FROM companys com
		INNER JOIN wanteds
		wan
		ON com.id = wan.company_id
		WHERE wan.enddate > NOW()
		ORDER BY RAND() LIMIT 4) comrec,
		(SELECT @ROWNUM := 0) R
	</select>

	<select id="findInfoCounts" resultType="site.metacoding.miniproject1.web.dto.response.mypage.InfoCountDto">
		SELECT count((IFNULL(state, 0))) AS statusAll,
		(SELECT count((IFNULL(wanted_id, 0))) AS likesCount
		FROM
		likes
		WHERE user_id = #{id}) likesCount,
		(SELECT count((IFNULL(company_id, 0))) AS subscribesCount
		FROM subscribes
		WHERE user_id = #{id})
		subscribesCount,
		(SELECT count((IFNULL(wanted_id, 0))) AS requestsCount
		FROM requests req
		INNER JOIN resumes res
		ON req.resume_id = res.id
		WHERE
		res.user_id = #{id}) requestsCount
		FROM application_status appst
		INNER JOIN resumes res
		ON appst.resume_id = res.id
		WHERE res.user_id = #{id}
	</select>

	<select id="findAll" resultType="site.metacoding.miniproject1.web.dto.response.mypage.StatusInfoDto">
		SELECT apps.id id, apps.wanted_id wantedId,
		apps.resume_id resumeId,
		apps.state state,
		apps.created created, wan.position_code_id
		positionCodeId,
		wan.company_id companyId, com.company_name
		companyName,
		poco.name positionCodeName,
		res.user_id userId
		FROM application_status apps
		INNER JOIN wanteds
		wan
		ON apps.wanted_id = wan.id
		INNER JOIN companys com
		ON wan.company_id = com.id
		INNER JOIN positions_code poco
		ON wan.position_code_id = poco.id
		INNER
		JOIN resumes res
		ON apps.resume_id = res.id
		WHERE res.user_id = #{id}
		<if test="keyword != null">
			AND com.company_name LIKE CONCAT('%',#{keyword},'%')
		</if>
		ORDER BY apps.id DESC
	</select>

	<select id="findCounts" resultType="site.metacoding.miniproject1.web.dto.response.mypage.StatusCountDto">
		SELECT count((IFNULL(state, 0))) AS statusAll,
		(SELECT
		count((IFNULL(state, 0))) AS statusC
		FROM
		application_status appst
		INNER JOIN resumes res
		ON appst.resume_id = res.id
		WHERE res.user_id = #{id} AND state = 0 ) statusC,
		(SELECT
		count((IFNULL(state, 0))) AS statusFinal
		FROM application_status appst
		INNER JOIN resumes res
		ON appst.resume_id = res.id
		WHERE res.user_id = #{id} AND
		state = 1) statusFinal
		FROM application_status appst
		INNER JOIN resumes res
		ON appst.resume_id = res.id
		WHERE res.user_id = #{id}
	</select>

	<select id="findWaiting" resultType="site.metacoding.miniproject1.web.dto.response.mypage.StatusWaitingInfoDto">
		SELECT apps.id id, apps.wanted_id wantedId,
		apps.resume_id resumeId,
		apps.state state,
		apps.created created, wan.position_code_id
		positionCodeId,
		wan.company_id companyId, com.company_name
		companyName,
		poco.name positionCodeName
		FROM application_status apps
		INNER JOIN wanteds wan
		ON
		apps.wanted_id =
		wan.id
		INNER JOIN companys com
		ON wan.company_id =
		com.id
		INNER JOIN positions_code poco
		ON wan.position_code_id = poco.id
		INNER JOIN resumes res
		ON
		apps.resume_id = res.id
		WHERE res.user_id = #{id} AND apps.state = 0
		<if test="keyword != null">
			AND com.company_name LIKE CONCAT('%',#{keyword},'%')
		</if>
		ORDER BY apps.id DESC
	</select>

	<select id="findFinal" resultType="site.metacoding.miniproject1.web.dto.response.mypage.StatusFinalInfoDto">
		SELECT apps.id id, apps.wanted_id wantedId,
		apps.resume_id resumeId,
		apps.state state,
		apps.created created, wan.position_code_id
		positionCodeId,
		wan.company_id companyId, com.company_name
		companyName,
		poco.name positionCodeName
		FROM application_status apps
		INNER JOIN wanteds wan
		ON
		apps.wanted_id =
		wan.id
		INNER JOIN companys com
		ON wan.company_id =
		com.id
		INNER JOIN positions_code poco
		ON wan.position_code_id = poco.id
		INNER JOIN resumes res
		ON
		apps.resume_id = res.id
		WHERE res.user_id = #{id} AND apps.state = 1
		<if test="keyword != null">
			AND com.company_name LIKE CONCAT('%',#{keyword},'%')
		</if>
		ORDER BY apps.id DESC
	</select>

	<select id="findRequest" resultType="site.metacoding.miniproject1.web.dto.response.mypage.RequestsInfoDto">
		SELECT req.id, req.resume_id, req.wanted_id, req.status, req.created,
		wan.position_code_id, wan.career_code_id, wan.company_id,
		com.company_name,
		poco.name positionCodeName
		FROM requests req
		INNER JOIN wanteds wan
		ON req.wanted_id = wan.id
		INNER JOIN companys com
		ON wan.company_id=com.id
		INNER JOIN
		positions_code poco
		ON wan.position_code_id = poco.id
		INNER JOIN resumes res
		ON req.resume_id = res.id
		WHERE res.user_id = #{id}
		<if test="keyword != null">
			AND com.company_name LIKE CONCAT('%',#{keyword},'%')
		</if>
		ORDER BY req.id DESC
	</select> -->


</mapper>